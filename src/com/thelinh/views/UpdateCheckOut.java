/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.thelinh.views;

import com.thelinh.controller.LoadTable;
import com.thelinh.models.CheckOutSql;
import com.thelinh.models.DetailSql;
import com.thelinh.models.CheckOut;
import com.thelinh.controller.Controller;
import com.thelinh.models.Detail;
import java.awt.event.ItemEvent;
import java.io.File;
import java.io.IOException;
import java.sql.Date;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.table.TableModel;
import jxl.Sheet;
import jxl.Workbook;
import jxl.read.biff.BiffException;
import jxl.write.Label;
import jxl.write.WritableSheet;
import jxl.write.WritableWorkbook;
import jxl.write.WriteException;

/**
 *
 * @author Admin
 */
public class UpdateCheckOut extends javax.swing.JFrame {

/*    CheckOutSQL checkoutSQL = new CheckOutSQL();
    DetailSQL detailSQL = new DetailSQL();*/
    public static PreparedStatement ps;
    String sql = "SELECT CheckOut.*,Detail.BookId,Detail.BorrowingDay,Detail.PayDay,Detail.DeadLine,Detail.Deposit,Detail.Amercement FROM CheckOut,Detail WHERE CheckOut.CheckOutId = Detail.CheckOutId";
    String sqlClient = "SELECT * FROM CheckOut";
    String sqlBook = "SELECT * FROM Book EXCEPT SELECT Book.* FROM Book,Detail WHERE Book.BookId = Detail.BookId";
    int k = 1;
    /**
     * Creates new form UpdateCheckOut
     */
    public UpdateCheckOut() {
        initComponents();
        LoadTable.LoadDataCheckOut(sql, tbCheckOut);
        LoadTable.loadDataCheckOut(sqlClient, tbClient);
        LoadTable.LoadDataBook(sqlBook, tbBook);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btSearch = new javax.swing.JButton();
        tfSearch = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        btAddClient = new javax.swing.JButton();
        btDelete = new javax.swing.JButton();
        btEdit = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        tfCheckOutId = new javax.swing.JTextField();
        tfClientId = new javax.swing.JTextField();
        tfBookId = new javax.swing.JTextField();
        tfBorrowingDay = new javax.swing.JTextField();
        tfPayDay = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbCheckOut = new javax.swing.JTable();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        tfDeposit = new javax.swing.JTextField();
        tfDeadLine = new javax.swing.JTextField();
        tfAmercement = new javax.swing.JTextField();
        btnAddCheckOut = new javax.swing.JButton();
        btnAddFile = new javax.swing.JButton();
        btnPrintFile = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tbClient = new javax.swing.JTable();
        btnEditClient = new javax.swing.JButton();
        btnDeleteClient = new javax.swing.JButton();
        btnSearchClient = new javax.swing.JButton();
        txtSearchClient = new javax.swing.JTextField();
        jScrollPane3 = new javax.swing.JScrollPane();
        tbBook = new javax.swing.JTable();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        btSearch.setText("Search");
        btSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btSearchActionPerformed(evt);
            }
        });

        jLabel1.setText("CheckOutId");

        btAddClient.setText("Add");
        btAddClient.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAddClientActionPerformed(evt);
            }
        });

        btDelete.setText("Delete");
        btDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btDeleteActionPerformed(evt);
            }
        });

        btEdit.setText("Edit");
        btEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btEditActionPerformed(evt);
            }
        });

        jLabel2.setText("ClientId");

        jLabel3.setText("BookId");

        jLabel4.setText("BorrowingDay");

        jLabel5.setText("PayDay");

        tfBorrowingDay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfBorrowingDayActionPerformed(evt);
            }
        });

        tbCheckOut.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tbCheckOut.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbCheckOutMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tbCheckOut);

        jLabel6.setText("Deposit");

        jLabel7.setText("DeadLine");

        jLabel8.setText("Amercement");

        btnAddCheckOut.setText("Add");
        btnAddCheckOut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddCheckOutActionPerformed(evt);
            }
        });

        btnAddFile.setText("Add File");
        btnAddFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddFileActionPerformed(evt);
            }
        });

        btnPrintFile.setText("Print File");
        btnPrintFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPrintFileActionPerformed(evt);
            }
        });

        jLabel9.setText("Add Borrow Clients");

        jLabel10.setText("Add Borrowed Book");

        tbClient.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tbClient.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbClientMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tbClient);

        btnEditClient.setText("Edit");
        btnEditClient.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditClientActionPerformed(evt);
            }
        });

        btnDeleteClient.setText("Delete");
        btnDeleteClient.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteClientActionPerformed(evt);
            }
        });

        btnSearchClient.setText("Search");
        btnSearchClient.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchClientActionPerformed(evt);
            }
        });

        tbBook.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane3.setViewportView(tbBook);

        jLabel11.setText("BOOK TABLE");

        jLabel12.setText("Search by");

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "CheckOutId", "ClientId", "BookId", "Deposit", "Amercement", "None" }));
        jComboBox1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBox1ItemStateChanged(evt);
            }
        });
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 274, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btAddClient)
                                .addGap(18, 18, 18)
                                .addComponent(btnEditClient)
                                .addGap(18, 18, 18)
                                .addComponent(btnDeleteClient))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel4)
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addGroup(layout.createSequentialGroup()
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addGroup(layout.createSequentialGroup()
                                                    .addGap(4, 4, 4)
                                                    .addComponent(jLabel3))
                                                .addComponent(jLabel2))
                                            .addGap(20, 20, 20)))
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                            .addGap(33, 33, 33)
                                            .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(layout.createSequentialGroup()
                                            .addGap(18, 18, 18)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(tfClientId, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(tfCheckOutId, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                                .addComponent(jLabel5)
                                .addComponent(jLabel7)
                                .addComponent(jLabel6)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jLabel12, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btSearch, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel8))))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(234, 234, 234)
                                .addComponent(jLabel11))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(30, 30, 30)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtSearchClient, javax.swing.GroupLayout.PREFERRED_SIZE, 395, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 599, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(201, 201, 201)
                                .addComponent(btnSearchClient))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(151, 151, 151)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(tfSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 452, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(btnAddCheckOut)
                                        .addGap(30, 30, 30)
                                        .addComponent(btEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(29, 29, 29)
                                        .addComponent(btDelete)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(btnAddFile)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(btnPrintFile))
                                    .addComponent(tfAmercement, javax.swing.GroupLayout.DEFAULT_SIZE, 395, Short.MAX_VALUE)
                                    .addComponent(tfDeadLine)
                                    .addComponent(tfDeposit)
                                    .addComponent(tfBookId)
                                    .addComponent(tfBorrowingDay)
                                    .addComponent(tfPayDay))
                                .addGap(18, 18, 18)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 476, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(289, 289, 289)
                        .addComponent(jLabel10)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(btnSearchClient))
                .addGap(2, 2, 2)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(tfCheckOutId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtSearchClient, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfClientId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(btnEditClient)
                    .addComponent(btnDeleteClient)
                    .addComponent(btAddClient))
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 116, Short.MAX_VALUE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel10)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(jLabel3)
                                            .addComponent(tfBookId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(18, 18, 18)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(jLabel4)
                                            .addComponent(tfBorrowingDay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(18, 18, 18)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(jLabel5)
                                            .addComponent(tfPayDay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(18, 18, 18)
                                        .addComponent(jLabel6))
                                    .addComponent(tfDeposit, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(15, 15, 15)
                                .addComponent(tfDeadLine, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(tfAmercement, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnPrintFile)
                    .addComponent(btnAddFile)
                    .addComponent(btEdit)
                    .addComponent(btDelete)
                    .addComponent(btnAddCheckOut))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btSearch))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(805, 805, 805))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tfBorrowingDayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfBorrowingDayActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfBorrowingDayActionPerformed

    private void tbCheckOutMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbCheckOutMouseClicked
        int row = tbCheckOut.getSelectedRow();
        String rowId = (tbCheckOut.getModel().getValueAt(row, 0)).toString();
        String rowId1 = (tbCheckOut.getModel().getValueAt(row, 2)).toString();
        
        String sql1 = "SELECT CheckOut.*,Detail.BookId,Detail.BorrowingDay,Detail.PayDay,Detail.DeadLine,Detail.Deposit,Detail.Amercement FROM CheckOut,Detail WHERE CheckOut.CheckOutId = Detail.CheckOutId AND CheckOut.CheckOutId = '" + rowId +"'" + " AND Detail.BookId = '" + rowId1 + "'";
        ResultSet rs = LoadTable.Display(sql1);
        try {
            if(rs.next()){
                tfCheckOutId.setText(rs.getString("CheckOutId"));
                tfClientId.setText(rs.getString("ClientId"));
                tfBookId.setText(rs.getString("BookId"));
                tfBorrowingDay.setText(rs.getString("BorrowingDay"));
                tfPayDay.setText(rs.getString("PayDay"));
                tfDeadLine.setText(rs.getString("DeadLine"));
                tfDeposit.setText(rs.getString("Deposit"));
                tfAmercement.setText(rs.getString("Amercement"));
            }
                } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "ERROR");
        }
    }//GEN-LAST:event_tbCheckOutMouseClicked

    private void btSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btSearchActionPerformed
        String sql1 = "SELECT CheckOut.*,Detail.BookId,Detail.BorrowingDay,Detail.PayDay,Detail.DeadLine,Detail.Deposit,Detail.Amercement FROM CheckOut,Detail WHERE CheckOut.CheckOutId = Detail.CheckOutId";
        String sql2 = "SELECT CheckOut.*,Detail.BookId,Detail.BorrowingDay,Detail.PayDay,Detail.DeadLine,Detail.Deposit,Detail.Amercement FROM CheckOut,Detail WHERE CheckOut.CheckOutId = Detail.CheckOutId AND CheckOutId LIKE '%" + tfSearch.getText() + "%'";
        String sql3 = "SELECT CheckOut.*,Detail.BookId,Detail.BorrowingDay,Detail.PayDay,Detail.DeadLine,Detail.Deposit,Detail.Amercement FROM CheckOut,Detail WHERE CheckOut.CheckOutId = Detail.CheckOutId AND ClientId LIKE '%" + tfSearch.getText() + "%'";
        String sql4 = "SELECT CheckOut.*,Detail.BookId,Detail.BorrowingDay,Detail.PayDay,Detail.DeadLine,Detail.Deposit,Detail.Amercement FROM CheckOut,Detail WHERE CheckOut.CheckOutId = Detail.CheckOutId AND BookId LIKE '%" + tfSearch.getText() + "%'"; 
                     
        
        switch(k){
            case 1:
                LoadTable.LoadDataCheckOut(sql2, tbCheckOut);
                break;
            case 2:
                LoadTable.LoadDataCheckOut(sql3, tbCheckOut);
                break;
            case 3:
                LoadTable.LoadDataCheckOut(sql4, tbCheckOut);
                break;
            case 4:
                LoadTable.LoadDataCheckOut(sql1, tbCheckOut);
                break;
        }
    }//GEN-LAST:event_btSearchActionPerformed

    private void btAddClientActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAddClientActionPerformed
        if(tfCheckOutId.getText().length() == 0){
            JOptionPane.showMessageDialog(null, "You have to enter CheckOutId", "Notification", JOptionPane.INFORMATION_MESSAGE);
        }
        else if(tfCheckOutId.getText().length() > 10){
            JOptionPane.showMessageDialog(null, "CheckOutId have to less more than 10 characters", "Notification", JOptionPane.INFORMATION_MESSAGE);
        }
        else{
            String sql = "SELECT CheckOutId FROM CheckOut";
            ResultSet rs = LoadTable.Display(sql);
            try {
                while(rs.next()){
                    if(rs.getString("CheckOutId") == tfCheckOutId.getText()){
                        JOptionPane.showMessageDialog(null, "This CheckOutId already exists", "Notification", JOptionPane.INFORMATION_MESSAGE);
 
                    }
                        }
                CheckOut checkout = new CheckOut(tfCheckOutId.getText(), tfClientId.getText());
                Controller.insertCheckOut(checkout);
                btnSearchClient.doClick();
                
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null, "ERROR");
            }
        }
    }//GEN-LAST:event_btAddClientActionPerformed

    private void btDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btDeleteActionPerformed
        if(tfCheckOutId.getText().length() == 0){
            JOptionPane.showMessageDialog(null, "You have to enter CheckOutId", "Notification", JOptionPane.INFORMATION_MESSAGE);
        }
        else if(tfCheckOutId.getText().length() > 10){
            JOptionPane.showMessageDialog(null, "CheckOutId have to less more than 10 characters", "Notification", JOptionPane.INFORMATION_MESSAGE);
        }
        else{
            int click = JOptionPane.showConfirmDialog(null, "Do you want to delete?");
            if(click == JOptionPane.YES_OPTION){
            if(Controller.deleteDetail(tfCheckOutId.getText(),tfBookId.getText())){
                JOptionPane.showMessageDialog(null, "Delete Success", "Notification", JOptionPane.INFORMATION_MESSAGE);
            }
            else{
                JOptionPane.showMessageDialog(null, "CheckOutId does not exist", "ERROR", JOptionPane.ERROR_MESSAGE);
            }
            btSearch.doClick();
            LoadTable.LoadDataBook(sqlBook, tbBook);
        }
        }
    }//GEN-LAST:event_btDeleteActionPerformed

    private void btEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btEditActionPerformed
        if(tfCheckOutId.getText().length() == 0){
            JOptionPane.showMessageDialog(null, "You have to enter CheckOutId", "Notification", JOptionPane.INFORMATION_MESSAGE);
        }
        else if(tfCheckOutId.getText().length() > 10){
            JOptionPane.showMessageDialog(null, "CheckOutId have to less more than 10 characters", "Notification", JOptionPane.INFORMATION_MESSAGE);
        }
        else{
            try {
                int click = JOptionPane.showConfirmDialog(null, "Do you want to edit?");
                if(click == JOptionPane.YES_OPTION){
                Date dt1 = new Date(new SimpleDateFormat("yyyy-MM-dd").parse(tfBorrowingDay.getText()).getTime());
                Date dt2 = new Date(new SimpleDateFormat("yyyy-MM-dd").parse(tfPayDay.getText()).getTime());
                Date dt3 = new Date(new SimpleDateFormat("yyyy-MM-dd").parse(tfDeadLine.getText()).getTime());
                Detail detail = new Detail(tfCheckOutId.getText(), tfBookId.getText(),  dt1, dt2 , Integer.parseInt(tfDeposit.getText()), dt3, Integer.parseInt(tfAmercement.getText()));
                if(Controller.updateDetail(detail)){
                    JOptionPane.showMessageDialog(null, "Edit Success", "Notification", JOptionPane.INFORMATION_MESSAGE);
                }
                else{
                    JOptionPane.showMessageDialog(null, "ERROR", "ERROR", JOptionPane.ERROR_MESSAGE);
                }
                }
            } catch (ParseException ex) {
                Logger.getLogger(UpdateCheckOut.class.getName()).log(Level.SEVERE, null, ex);
            }
            btSearch.doClick();
            LoadTable.LoadDataBook(sqlBook, tbBook);
        }
    }//GEN-LAST:event_btEditActionPerformed

    private void btnAddCheckOutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddCheckOutActionPerformed
        if(tfCheckOutId.getText().length() == 0){
            JOptionPane.showMessageDialog(null, "You have to enter CheckOutId", "Notification", JOptionPane.INFORMATION_MESSAGE);
        }
        else if(tfCheckOutId.getText().length() > 10){
            JOptionPane.showMessageDialog(null, "CheckOutId have to less more than 10 characters", "Notification", JOptionPane.INFORMATION_MESSAGE);
        }
        else{
            try {
                Date dt1 = new Date(new SimpleDateFormat("yyyy-MM-dd").parse(tfBorrowingDay.getText()).getTime());
                Date dt2 = new Date(new SimpleDateFormat("yyyy-MM-dd").parse(tfPayDay.getText()).getTime());
                Date dt3 = new Date(new SimpleDateFormat("yyyy-MM-dd").parse(tfDeadLine.getText()).getTime());
                Detail detail = new Detail(tfCheckOutId.getText(),tfBookId.getText(), dt1, dt2 , Integer.parseInt(tfDeposit.getText()), dt3, Integer.parseInt(tfAmercement.getText()));
                Controller.insertDetail(detail);
                btSearch.doClick();
                LoadTable.LoadDataBook(sqlBook, tbBook);
            } catch (ParseException ex) {
                Logger.getLogger(UpdateCheckOut.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_btnAddCheckOutActionPerformed
// lam sau
    private void btnAddFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddFileActionPerformed
        JFileChooser jfc = new JFileChooser();
        if(jfc.showOpenDialog(null) == JFileChooser.APPROVE_OPTION){
            jfc.setDialogTitle("Open File");
            File file = jfc.getSelectedFile();
                try {
                    Workbook wb = Workbook.getWorkbook(file);
                    Sheet sheet = wb.getSheet(0);
                    int rows = sheet.getRows();
                    int columns = sheet.getColumns();
                    for(int i = 0; i < rows; i++){
                        Detail detail = new Detail(sheet.getCell(0, i).getContents(), sheet.getCell(1, i).getContents(), 
                                                   Date.valueOf(sheet.getCell(2, i).getContents()),
                                                   Date.valueOf(sheet.getCell(3, i).getContents()), 
                                                   Integer.parseInt(sheet.getCell(4, i).getContents()), 
                                                   Date.valueOf(sheet.getCell(5, i).getContents()), 
                                                   Integer.parseInt(sheet.getCell(6, i).getContents()));
                        Controller.insertDetail(detail);
                   
                    }
                    wb.close();
                    btSearch.doClick();
                    LoadTable.LoadDataBook(sqlBook, tbBook);
                } catch (IOException ex) {
                    System.out.println("File not found\n" + ex.toString());
                } catch (BiffException ex) {
                    ex.printStackTrace();
                }
        }
    }//GEN-LAST:event_btnAddFileActionPerformed

    private void btnPrintFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPrintFileActionPerformed
        JFileChooser jfc = new JFileChooser("Save File");
        if (jfc.showSaveDialog(null) == JFileChooser.APPROVE_OPTION) {
            jfc.setDialogTitle("Save File");
            File file = jfc.getSelectedFile();
            WritableWorkbook wb;
            try {
                wb = Workbook.createWorkbook(file);
                WritableSheet sheet = wb.createSheet("Book", 0);
                try {
                    switch(k){
                        case 1:
                            sheet.addCell(new Label(0, 0, "CHECKOUT SEARCH RESULTS BY CheckOutId"));
                            sheet.addCell(new Label(0, 1, "CheckOutId :" + tfSearch.getText()));
                            break;
                        case 2:
                            sheet.addCell(new Label(0, 0, "CHECKOUT SEARCH RESULTS BY ClientId"));
                            sheet.addCell(new Label(0, 1, "ClientId :" + tfSearch.getText()));
                            break;
                        case 3:
                            sheet.addCell(new Label(0, 0, "CHECKOUT SEARCH RESULTS BY BookId"));
                            sheet.addCell(new Label(0, 1, "BookId :" + tfSearch.getText()));
                            break;
                        case 4:
                            sheet.addCell(new Label(0, 0, "CHECKOUT SEARCH RESULTS"));
                            break;
                    }
                    sheet.addCell(new Label(0, 2, "CheckOutId"));
                    sheet.addCell(new Label(1, 2, "ClientId"));
                    sheet.addCell(new Label(2, 2, "BookId"));
                    sheet.addCell(new Label(3, 2, "BorrrowingDay"));
                    sheet.addCell(new Label(4, 2, "PayDay"));
                    sheet.addCell(new Label(5, 2, "DeadLine"));
                    sheet.addCell(new Label(6, 2, "Deposit"));
                    sheet.addCell(new Label(7, 2, "Amercement"));
                    int rowBegin = 3;
                    TableModel tableModel = tbCheckOut.getModel();
                    for(int row = rowBegin, i = 0; row < rowBegin + tableModel.getRowCount(); row++, i++){
                        sheet.addCell(new Label(0, row, (String) tableModel.getValueAt(i, 0)));
                        sheet.addCell(new Label(1, row, (String) tableModel.getValueAt(i, 1)));
                        sheet.addCell(new Label(2, row, (String) tableModel.getValueAt(i, 2)));
                        SimpleDateFormat sdf1 = new SimpleDateFormat();
                        SimpleDateFormat sdf2 = new SimpleDateFormat();
                        SimpleDateFormat sdf3 = new SimpleDateFormat();
                        sheet.addCell(new Label(3, row, sdf1.format(tableModel.getValueAt(i, 3))));
                        sheet.addCell(new Label(4, row, sdf2.format(tableModel.getValueAt(i, 4))));
                        sheet.addCell(new Label(5, row, sdf3.format(tableModel.getValueAt(i, 5))));
                        sheet.addCell(new Label(6, row, String.valueOf(tableModel.getValueAt(i, 6))));
                        sheet.addCell(new Label(7, row, String.valueOf(tableModel.getValueAt(i, 7))));
                    }
                    wb.write();
                    wb.close();
                    JOptionPane.showMessageDialog(null, "Save Success");
                    
                } catch (WriteException ex) {
                    Logger.getLogger(UpdateBook.class.getName()).log(Level.SEVERE, null, ex);
                }
                
            } catch (IOException ex) {
                Logger.getLogger(UpdateBook.class.getName()).log(Level.SEVERE, null, ex);
            }
            
            
        }
    }//GEN-LAST:event_btnPrintFileActionPerformed

    private void btnEditClientActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditClientActionPerformed
        if(tfCheckOutId.getText().length() == 0){
            JOptionPane.showMessageDialog(null, "You have to enter CheckOutId", "Notification", JOptionPane.INFORMATION_MESSAGE);
        }
        else if(tfCheckOutId.getText().length() > 10){
            JOptionPane.showMessageDialog(null, "CheckOutId have to less more than 10 characters", "Notification", JOptionPane.INFORMATION_MESSAGE);
        }
        else{
            int click = JOptionPane.showConfirmDialog(null, "Do you want to edit?");
            if(click == JOptionPane.YES_OPTION){
            CheckOut checkOut = new CheckOut(tfCheckOutId.getText(), tfClientId.getText());
            if(Controller.updateCheckOut(checkOut)){
                JOptionPane.showMessageDialog(null, "Edit Success", "Notification", JOptionPane.INFORMATION_MESSAGE);
            }
            else{
                JOptionPane.showMessageDialog(null, "CheckOutId or ClientId does not exist", "ERROR",JOptionPane.ERROR_MESSAGE);
            }
            btnSearchClient.doClick();
            }
        }
    }//GEN-LAST:event_btnEditClientActionPerformed

    private void btnDeleteClientActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteClientActionPerformed
        if(tfCheckOutId.getText().length() == 0){
            JOptionPane.showMessageDialog(null, "You have to enter CheckOutId", "Notification", JOptionPane.INFORMATION_MESSAGE);
        }
        else if(tfCheckOutId.getText().length() > 10){
            JOptionPane.showMessageDialog(null, "CheckOutId have to less more than 10 characters", "Notification", JOptionPane.INFORMATION_MESSAGE);
        }
        else{
            int click = JOptionPane.showConfirmDialog(null, "Do you want to delete?");
            if(click == JOptionPane.YES_OPTION){
            if(Controller.deleteCheckOut(tfCheckOutId.getText())){
                JOptionPane.showMessageDialog(null, "Delete Success", "Notification", JOptionPane.INFORMATION_MESSAGE);
            }
            else{
                JOptionPane.showMessageDialog(null, "CheckOutId does not exist or somebody have borrowed", "ERROR",JOptionPane.ERROR_MESSAGE);
            }
            btnSearchClient.doClick();
             }
        }
    }//GEN-LAST:event_btnDeleteClientActionPerformed

    private void btnSearchClientActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchClientActionPerformed
        String sql1 = "SELECT * FROM CheckOut";
        String sql2 = "SELECT * FROM CheckOut WHERE CheckOutId LIKE '%" + txtSearchClient.getText() + "%'"
                       + " OR ClientId LIKE '%" + txtSearchClient.getText() + "%'";
        if(txtSearchClient.getText().length() == 0){
            LoadTable.loadDataCheckOut(sql1, tbClient);
        }
        else{
            LoadTable.loadDataCheckOut(sql2, tbClient);
        }
        
        
    }//GEN-LAST:event_btnSearchClientActionPerformed

    private void tbClientMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbClientMouseClicked
        int row = tbClient.getSelectedRow();
        String rowId = (tbClient.getModel().getValueAt(row, 0)).toString();
        
        String sql1 = "SELECT * FROM CheckOut WHERE CheckOutId = '" + rowId + "'";
        ResultSet rs = LoadTable.Display(sql1);
        try {
            if(rs.next()){
                tfCheckOutId.setText(rs.getString("CheckOutId"));
                tfClientId.setText(rs.getString("ClientId"));
                
                        }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "ERROR");
        }
    }//GEN-LAST:event_tbClientMouseClicked

    private void jComboBox1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBox1ItemStateChanged
        if(evt.getStateChange() == ItemEvent.SELECTED && evt.getItem().toString() == "CheckOutId"){
            k = 1;
        }
        if(evt.getStateChange() == ItemEvent.SELECTED && evt.getItem().toString() == "ClientId"){
            k = 2;
        }
        if(evt.getStateChange() == ItemEvent.SELECTED && evt.getItem().toString() == "BookId"){
            k = 3;
        }
        if(evt.getStateChange() == ItemEvent.SELECTED && evt.getItem().toString() == "None"){
            k = 4;
        }
    }//GEN-LAST:event_jComboBox1ItemStateChanged

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UpdateCheckOut.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UpdateCheckOut.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UpdateCheckOut.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UpdateCheckOut.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new UpdateCheckOut().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btAddClient;
    private javax.swing.JButton btDelete;
    private javax.swing.JButton btEdit;
    private javax.swing.JButton btSearch;
    private javax.swing.JButton btnAddCheckOut;
    private javax.swing.JButton btnAddFile;
    private javax.swing.JButton btnDeleteClient;
    private javax.swing.JButton btnEditClient;
    private javax.swing.JButton btnPrintFile;
    private javax.swing.JButton btnSearchClient;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable tbBook;
    private javax.swing.JTable tbCheckOut;
    private javax.swing.JTable tbClient;
    private javax.swing.JTextField tfAmercement;
    private javax.swing.JTextField tfBookId;
    private javax.swing.JTextField tfBorrowingDay;
    private javax.swing.JTextField tfCheckOutId;
    private javax.swing.JTextField tfClientId;
    private javax.swing.JTextField tfDeadLine;
    private javax.swing.JTextField tfDeposit;
    private javax.swing.JTextField tfPayDay;
    private javax.swing.JTextField tfSearch;
    private javax.swing.JTextField txtSearchClient;
    // End of variables declaration//GEN-END:variables
}
