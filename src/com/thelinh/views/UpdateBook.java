/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.thelinh.views;

import com.thelinh.controller.LoadTable;
import com.thelinh.models.BookSql;
import com.thelinh.models.Book;
import com.thelinh.controller.Controller;
import java.awt.event.ItemEvent;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStream;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.logging.Level;
import java.util.logging.Logger;
import javafx.beans.value.WritableBooleanValue;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.table.TableModel;
import jxl.Sheet;
import jxl.Workbook;
import jxl.read.biff.BiffException;
import jxl.write.Label;
import jxl.write.WritableCell;
import jxl.write.WritableSheet;
import jxl.write.WritableWorkbook;
import jxl.write.WriteException;

/**
 *
 * @author Admin
 */
public class UpdateBook extends javax.swing.JFrame {

//    BookSQL bookSQl = new BookSQL();
    String sql = "SELECT * FROM Book ORDER BY BookId ASC";
    private static PreparedStatement ps = null;
    int k = 1;
    /**
     * Creates new form UpdateBook
     */
    public UpdateBook() {
        initComponents();
        LoadTable.LoadDataBook(sql, tbBook);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btSearch = new javax.swing.JButton();
        tfSearch = new javax.swing.JTextField();
        btAdd = new javax.swing.JButton();
        btDelete = new javax.swing.JButton();
        btEdit = new javax.swing.JButton();
        lbBook = new javax.swing.JLabel();
        lbBookName = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        tfBookId = new javax.swing.JTextField();
        tfBookName = new javax.swing.JTextField();
        tfAuthorName = new javax.swing.JTextField();
        tfPublishingCompany = new javax.swing.JTextField();
        tfPrice = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbBook = new javax.swing.JTable();
        jLabel6 = new javax.swing.JLabel();
        tfCategory = new javax.swing.JTextField();
        btnAddFile = new javax.swing.JButton();
        btnPrintFile = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        cbSearchBy = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        btSearch.setText("Search");
        btSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btSearchActionPerformed(evt);
            }
        });

        btAdd.setText("Add");
        btAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAddActionPerformed(evt);
            }
        });

        btDelete.setText("Delete");
        btDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btDeleteActionPerformed(evt);
            }
        });

        btEdit.setText("Edit");
        btEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btEditActionPerformed(evt);
            }
        });

        lbBook.setText("BookId");

        lbBookName.setText("BookName");

        jLabel3.setText("AuthorName");

        jLabel4.setText("PublishingCompany");

        jLabel5.setText("Price");

        tbBook.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {}
            },
            new String [] {

            }
        ));
        tbBook.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbBookMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tbBook);

        jLabel6.setText("Category");

        btnAddFile.setText("Add File");
        btnAddFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddFileActionPerformed(evt);
            }
        });

        btnPrintFile.setText("Print File");
        btnPrintFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPrintFileActionPerformed(evt);
            }
        });

        jLabel1.setText("Search by");

        cbSearchBy.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "BookId", "BookName", "AuthorName", "PublishingCompany", "Category", "None" }));
        cbSearchBy.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbSearchByItemStateChanged(evt);
            }
        });
        cbSearchBy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbSearchByActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(66, 66, 66)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 499, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(btnAddFile, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(btSearch, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addGap(36, 36, 36)))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(tfSearch)
                                    .addComponent(tfBookId)
                                    .addComponent(tfBookName)
                                    .addComponent(tfAuthorName)
                                    .addComponent(tfPublishingCompany)
                                    .addComponent(tfPrice)
                                    .addComponent(tfCategory)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(cbSearchBy, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(btAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(79, 79, 79)
                                                .addComponent(btDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 67, Short.MAX_VALUE)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(btEdit, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(btnPrintFile, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))))
                        .addGap(52, 52, 52))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbBook, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbBookName, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btSearch)
                    .addComponent(tfSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(cbSearchBy, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnPrintFile)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 7, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btAdd)
                    .addComponent(btDelete)
                    .addComponent(btEdit)
                    .addComponent(btnAddFile))
                .addGap(64, 64, 64)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbBook)
                    .addComponent(tfBookId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbBookName)
                    .addComponent(tfBookName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(tfAuthorName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(tfPublishingCompany, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(tfPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(17, 17, 17)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfCategory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(15, 15, 15))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tbBookMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbBookMouseClicked
  
        int row = tbBook.getSelectedRow();
        String rowId = (tbBook.getModel().getValueAt(row, 0)).toString();
        
        String sql1 = "SELECT * FROM Book WHERE BookId = '" + rowId + "'";
        ResultSet rs = LoadTable.Display(sql1);
        try {
            if(rs.next()){
                tfBookId.setText(rs.getString("BookId"));
                tfBookName.setText(rs.getString("BookName"));
                tfAuthorName.setText(rs.getString("AuthorName"));
                tfPublishingCompany.setText(rs.getString("PublishingCompany"));
                tfPrice.setText(rs.getString("Price"));
                tfCategory.setText(rs.getString("Category"));
                        }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "ERROR");
        }
        
        
        
    }//GEN-LAST:event_tbBookMouseClicked

    private void btSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btSearchActionPerformed
        String sql1 = "SELECT * FROM Book";
        String sql2 = "SELECT * FROM Book WHERE BookId LIKE '%" + tfSearch.getText() + "%'";
        String sql3 = "SELECT * FROM Book WHERE BookName LIKE '%" + tfSearch.getText() + "%'";
        String sql4 = "SELECT * FROM Book WHERE AuthorName LIKE '%" + tfSearch.getText() + "%'";
        String sql5 = "SELECT * FROM Book WHERE PublishingCompany LIKE '%" + tfSearch.getText() + "%'";
        String sql6 = "SELECT * FROM Book WHERE Category LIKE '%" + tfSearch.getText() + "%'";
        
        switch(k){
            case 1:
                LoadTable.LoadDataBook(sql2, tbBook);
                break;
            case 2:
                LoadTable.LoadDataBook(sql3, tbBook);
                break;
            case 3:
                LoadTable.LoadDataBook(sql4, tbBook);
                break;
            case 4:
                LoadTable.LoadDataBook(sql5, tbBook);
                break;
            case 5:
                LoadTable.LoadDataBook(sql6, tbBook);
                break;
            case 6:
                LoadTable.LoadDataBook(sql1, tbBook);
                break;
        }
        
    }//GEN-LAST:event_btSearchActionPerformed

    private void btAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAddActionPerformed

        if(tfBookId.getText().length() == 0){
            JOptionPane.showMessageDialog(null, "You have to enter BookId", "Notification", JOptionPane.INFORMATION_MESSAGE);
        }
        else if(tfBookId.getText().length() > 10){
            JOptionPane.showMessageDialog(null, "BookId have to less more than 10 characters", "Notification", JOptionPane.INFORMATION_MESSAGE);
        }
        else{
            String sql = "SELECT BookId FROM Book";
            ResultSet rs = LoadTable.Display(sql);
            try {
                while(rs.next()){
                    if(rs.getString("BookId") == tfBookId.getText()){
                        JOptionPane.showMessageDialog(null, "This BookId already exists", "Notification", JOptionPane.INFORMATION_MESSAGE);
 
                    }
                        }
                // xu li chua chuan lam! :(
                Book book = new Book(tfBookId.getText(), tfBookName.getText(), tfAuthorName.getText(), tfPublishingCompany.getText(), Integer.parseInt(tfPrice.getText()), tfCategory.getText());
                Controller.insertBook(book);
                btSearch.doClick();
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null, "ERROR");
            }
        }
       
    }//GEN-LAST:event_btAddActionPerformed

    private void btDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btDeleteActionPerformed
       if(tfBookId.getText().length() == 0){
            JOptionPane.showMessageDialog(null, "You have to enter BookId", "Notification", JOptionPane.INFORMATION_MESSAGE);
        }
        else if(tfBookId.getText().length() > 10){
            JOptionPane.showMessageDialog(null, "BookId have to less more than 10 characters", "Notification", JOptionPane.INFORMATION_MESSAGE);
        }
        else{
            int click = JOptionPane.showConfirmDialog(null, "Do you want to delete?");
            if(click == JOptionPane.YES_OPTION){
            if(Controller.deleteBook(tfBookId.getText())){
                JOptionPane.showMessageDialog(null, "Delete Success", "Notification", JOptionPane.INFORMATION_MESSAGE);
            }
            else{
                JOptionPane.showMessageDialog(null, "BookId does not exist or somebody have borrowed", "ERROR",JOptionPane.ERROR_MESSAGE);
            }
            btSearch.doClick();
             }
        }
    }//GEN-LAST:event_btDeleteActionPerformed

    private void btEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btEditActionPerformed
        if(tfBookId.getText().length() == 0){
            JOptionPane.showMessageDialog(null, "You have to enter BookId", "Notification", JOptionPane.INFORMATION_MESSAGE);
        }
        else if(tfBookId.getText().length() > 10){
            JOptionPane.showMessageDialog(null, "BookId have to less more than 10 characters", "Notification", JOptionPane.INFORMATION_MESSAGE);
        }
        else{
            int click = JOptionPane.showConfirmDialog(null, "Do you want to edit?");
            if(click == JOptionPane.YES_OPTION){
            Book book = new Book(tfBookId.getText(), tfBookName.getText(), tfAuthorName.getText(), tfPublishingCompany.getText(), Integer.parseInt(tfPrice.getText()), tfCategory.getText());
            if(Controller.updateBook(book)){
                JOptionPane.showMessageDialog(null, "Edit Success", "Notification", JOptionPane.INFORMATION_MESSAGE);
            }
            else{
                JOptionPane.showMessageDialog(null, "BookId does not exist", "ERROR",JOptionPane.ERROR_MESSAGE);
            }
            btSearch.doClick();
            }
        }
    }//GEN-LAST:event_btEditActionPerformed

    private void btnAddFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddFileActionPerformed
        JFileChooser jfc = new JFileChooser();
        if(jfc.showOpenDialog(null) == JFileChooser.APPROVE_OPTION){
            jfc.setDialogTitle("Open File");
            File file = jfc.getSelectedFile();
                try {
                Workbook wb = Workbook.getWorkbook(file);
                Sheet sheet = wb.getSheet(0);
                int rows = sheet.getRows();
                int columns = sheet.getColumns();
                for(int i = 0; i < rows; i++){
                    Book book = new Book(sheet.getCell(0, i).getContents(), sheet.getCell(1, i).getContents(),
                                          sheet.getCell(2, i).getContents(), sheet.getCell(3, i).getContents(),
                                          Integer.parseInt(sheet.getCell(4, i).getContents()), sheet.getCell(5, i).getContents());
                    Controller.insertBook(book);
                }
                wb.close();
                btSearch.doClick();
                
                } catch (IOException ex) {
                System.out.println("File not found\n" + ex.toString());
                } catch (BiffException ex) {
                Logger.getLogger(UpdateBook.class.getName()).log(Level.SEVERE, null, ex);
                ex.printStackTrace();
                }
        }
    
    }//GEN-LAST:event_btnAddFileActionPerformed

    private void btnPrintFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPrintFileActionPerformed
        JFileChooser jfc = new JFileChooser("Save File");
        if (jfc.showSaveDialog(null) == JFileChooser.APPROVE_OPTION) {
            jfc.setDialogTitle("Save File");
            File file = jfc.getSelectedFile();
            WritableWorkbook wb;
            try {
                wb = Workbook.createWorkbook(file);
                WritableSheet sheet = wb.createSheet("Book", 0);
                try {
                    switch(k){
                        case 1:
                            sheet.addCell(new Label(0, 0, "BOOK SEARCH RESULTS BY BookId"));
                            sheet.addCell(new Label(0, 1, "BookId :" + tfSearch.getText()));
                            break;
                        case 2:
                            sheet.addCell(new Label(0, 0, "BOOK SEARCH RESULTS BY BookName"));
                            sheet.addCell(new Label(0, 1, "BookName :" + tfSearch.getText()));
                            break;
                        case 3:
                            sheet.addCell(new Label(0, 0, "BOOK SEARCH RESULTS BY AuthorName"));
                            sheet.addCell(new Label(0, 1, "AuthorName :" + tfSearch.getText()));
                            break;
                        case 4:
                            sheet.addCell(new Label(0, 0, "BOOK SEARCH RESULTS BY PublishingCompany"));
                            sheet.addCell(new Label(0, 1, "PublishingCompany :" + tfSearch.getText()));
                            break;
                        case 5:
                            sheet.addCell(new Label(0, 0, "BOOK SEARCH RESULTS BY Category"));
                            sheet.addCell(new Label(0, 1, "Category :" + tfSearch.getText()));
                            break;
                        case 6:
                            sheet.addCell(new Label(0, 0, "BOOK SEARCH RESULTS"));
                            break;
           
                    }
                    sheet.addCell(new Label(0, 2, "BookId"));
                    sheet.addCell(new Label(1, 2, "BookName"));
                    sheet.addCell(new Label(2, 2, "AuthorName"));
                    sheet.addCell(new Label(3, 2, "PublishingCompany"));
                    sheet.addCell(new Label(4, 2, "Category"));
                    sheet.addCell(new Label(5, 2, "Price"));
                    int rowBegin = 3;
                    TableModel tableModel = tbBook.getModel();
                    for(int row = rowBegin, i = 0; row < rowBegin + tableModel.getRowCount(); row++, i++){
                        sheet.addCell(new Label(0, row, (String) tableModel.getValueAt(i, 0)));
                        sheet.addCell(new Label(1, row, (String) tableModel.getValueAt(i, 1)));
                        sheet.addCell(new Label(2, row, (String) tableModel.getValueAt(i, 2)));
                        sheet.addCell(new Label(3, row, (String) tableModel.getValueAt(i, 3)));
                        sheet.addCell(new Label(4, row, (String) tableModel.getValueAt(i, 4)));
                        sheet.addCell(new Label(5, row, String.valueOf(tableModel.getValueAt(i, 5))));
                    }
                    wb.write();
                    wb.close();
                    JOptionPane.showMessageDialog(null, "Save Success");
                    
                } catch (WriteException ex) {
                    Logger.getLogger(UpdateBook.class.getName()).log(Level.SEVERE, null, ex);
                }
                
            } catch (IOException ex) {
                Logger.getLogger(UpdateBook.class.getName()).log(Level.SEVERE, null, ex);
            }
            
            
        }
    }//GEN-LAST:event_btnPrintFileActionPerformed

    private void cbSearchByActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbSearchByActionPerformed
        
    }//GEN-LAST:event_cbSearchByActionPerformed

    private void cbSearchByItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbSearchByItemStateChanged
        if(evt.getStateChange() == ItemEvent.SELECTED && evt.getItem().toString() == "BookId"){
            k = 1;
        }
        if(evt.getStateChange() == ItemEvent.SELECTED && evt.getItem().toString() == "BookName"){
            k = 2;
        }
        if(evt.getStateChange() == ItemEvent.SELECTED && evt.getItem().toString() == "AuthorName"){
            k = 3;
        }
        if(evt.getStateChange() == ItemEvent.SELECTED && evt.getItem().toString() == "PublishingCompany"){
            k = 4;
        }
        if(evt.getStateChange() == ItemEvent.SELECTED && evt.getItem().toString() == "Category"){
            k = 5;
        }
        if(evt.getStateChange() == ItemEvent.SELECTED && evt.getItem().toString() == "None"){
            k = 6;
        }
    }//GEN-LAST:event_cbSearchByItemStateChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UpdateBook.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UpdateBook.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UpdateBook.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UpdateBook.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new UpdateBook().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btAdd;
    private javax.swing.JButton btDelete;
    private javax.swing.JButton btEdit;
    private javax.swing.JButton btSearch;
    private javax.swing.JButton btnAddFile;
    private javax.swing.JButton btnPrintFile;
    private javax.swing.JComboBox<String> cbSearchBy;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbBook;
    private javax.swing.JLabel lbBookName;
    private javax.swing.JTable tbBook;
    private javax.swing.JTextField tfAuthorName;
    private javax.swing.JTextField tfBookId;
    private javax.swing.JTextField tfBookName;
    private javax.swing.JTextField tfCategory;
    private javax.swing.JTextField tfPrice;
    private javax.swing.JTextField tfPublishingCompany;
    private javax.swing.JTextField tfSearch;
    // End of variables declaration//GEN-END:variables
}
